{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_data",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_rounds",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "data",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dataSource",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fetchData",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rounds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/mikeyrf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/GSN/Context.sol",
    "1": "/home/mikeyrf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/math/SafeMath.sol",
    "2": "/home/mikeyrf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/math/SignedSafeMath.sol",
    "4": "contracts/feeds/OVLChainlinkFeed.sol",
    "8": "interfaces/overlay/IOVLFeed.sol"
  },
  "ast": {
    "absolutePath": "contracts/feeds/OVLChainlinkFeed.sol",
    "exportedSymbols": {
      "OVLChainlinkFeed": [
        186
      ]
    },
    "id": 187,
    "license": "AGPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "47:23:4"
      },
      {
        "absolutePath": "/home/mikeyrf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/GSN/Context.sol",
        "file": "@openzeppelinV3/contracts/GSN/Context.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 187,
        "sourceUnit": 527,
        "src": "72:51:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/mikeyrf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/math/SafeMath.sol",
        "file": "@openzeppelinV3/contracts/math/SafeMath.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 187,
        "sourceUnit": 723,
        "src": "124:53:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/mikeyrf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/math/SignedSafeMath.sol",
        "file": "@openzeppelinV3/contracts/math/SignedSafeMath.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 187,
        "sourceUnit": 902,
        "src": "178:59:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/chainlink/AggregatorV3Interface.sol",
        "file": "../../interfaces/chainlink/AggregatorV3Interface.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 187,
        "sourceUnit": 933,
        "src": "239:62:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/overlay/IOVLFeed.sol",
        "file": "../../interfaces/overlay/IOVLFeed.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 187,
        "sourceUnit": 943,
        "src": "302:47:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/overlay/IOVLPosition.sol",
        "file": "../../interfaces/overlay/IOVLPosition.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 187,
        "sourceUnit": 1009,
        "src": "350:51:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 526,
              "src": "432:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$526",
                "typeString": "contract Context"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "432:7:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10,
              "name": "IOVLFeed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 942,
              "src": "441:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IOVLFeed_$942",
                "typeString": "contract IOVLFeed"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "441:8:4"
          }
        ],
        "contractDependencies": [
          526,
          942
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 186,
        "linearizedBaseContracts": [
          186,
          942,
          526
        ],
        "name": "OVLChainlinkFeed",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 14,
            "libraryName": {
              "contractScope": null,
              "id": 12,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 722,
              "src": "460:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$722",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "454:27:4",
            "typeName": {
              "id": 13,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "473:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 17,
            "libraryName": {
              "contractScope": null,
              "id": 15,
              "name": "SignedSafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 901,
              "src": "490:14:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SignedSafeMath_$901",
                "typeString": "library SignedSafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "484:32:4",
            "typeName": {
              "id": 16,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "509:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "constant": false,
            "id": 19,
            "mutability": "mutable",
            "name": "_chainlink",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 186,
            "src": "520:41:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$932",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "contractScope": null,
              "id": 18,
              "name": "AggregatorV3Interface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 932,
              "src": "520:21:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$932",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "1b076edc",
            "id": 21,
            "mutability": "mutable",
            "name": "dataSource",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 186,
            "src": "565:25:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "565:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a2e800ad",
            "id": 23,
            "mutability": "mutable",
            "name": "rounds",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 186,
            "src": "594:21:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "594:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 44,
              "nodeType": "Block",
              "src": "710:98:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 30,
                      "name": "_chainlink",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "716:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$932",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 32,
                          "name": "_data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "751:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 31,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 932,
                        "src": "729:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$932_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 33,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "729:28:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$932",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "716:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$932",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 35,
                  "nodeType": "ExpressionStatement",
                  "src": "716:41:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 36,
                      "name": "dataSource",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "763:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 37,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "776:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "763:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "763:18:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 40,
                      "name": "rounds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "787:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 41,
                      "name": "_rounds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "796:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "787:16:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "787:16:4"
                }
              ]
            },
            "documentation": null,
            "id": 45,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 45,
                  "src": "671:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "671:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "_rounds",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 45,
                  "src": "686:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "670:32:4"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "710:0:4"
            },
            "scope": 186,
            "src": "659:149:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 161,
              "nodeType": "Block",
              "src": "869:878:4",
              "statements": [
                {
                  "assignments": [
                    53,
                    55,
                    null,
                    57,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53,
                      "mutability": "mutable",
                      "name": "roundId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 161,
                      "src": "951:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 52,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "951:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 55,
                      "mutability": "mutable",
                      "name": "price",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 161,
                      "src": "967:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 54,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "967:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null,
                    {
                      "constant": false,
                      "id": 57,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 161,
                      "src": "983:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 56,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "983:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 61,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 58,
                        "name": "_chainlink",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "1006:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$932",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 931,
                      "src": "1006:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1006:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "950:84:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 63,
                          "name": "timestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "1048:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1060:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1048:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f564c436861696e6c696e6b466565643a20726f756e64206e6f7420636f6d706c657465",
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1063:38:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c9714c6632158d5ec264e2b12f388c9c0ca57f14ed2e15fcf61a568731085d8",
                          "typeString": "literal_string \"OVLChainlinkFeed: round not complete\""
                        },
                        "value": "OVLChainlinkFeed: round not complete"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c9714c6632158d5ec264e2b12f388c9c0ca57f14ed2e15fcf61a568731085d8",
                          "typeString": "literal_string \"OVLChainlinkFeed: round not complete\""
                        }
                      ],
                      "id": 62,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1040:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1040:62:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1040:62:4"
                },
                {
                  "assignments": [
                    70
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70,
                      "mutability": "mutable",
                      "name": "period",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 161,
                      "src": "1141:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 69,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1141:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 72,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1158:1:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1141:18:4"
                },
                {
                  "assignments": [
                    74
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74,
                      "mutability": "mutable",
                      "name": "priceCumulative",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 161,
                      "src": "1165:22:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 73,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1165:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 76,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1190:1:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1165:26:4"
                },
                {
                  "body": {
                    "id": 140,
                    "nodeType": "Block",
                    "src": "1232:402:4",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          },
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 87,
                            "name": "roundId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "1244:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 88,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1255:1:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1244:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 92,
                        "nodeType": "IfStatement",
                        "src": "1240:42:4",
                        "trueBody": {
                          "id": 91,
                          "nodeType": "Block",
                          "src": "1258:24:4",
                          "statements": [
                            {
                              "id": 90,
                              "nodeType": "Break",
                              "src": "1268:5:4"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "--",
                          "prefix": false,
                          "src": "1289:9:4",
                          "subExpression": {
                            "argumentTypes": null,
                            "id": 93,
                            "name": "roundId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "1289:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "id": 95,
                        "nodeType": "ExpressionStatement",
                        "src": "1289:9:4"
                      },
                      {
                        "assignments": [
                          null,
                          97,
                          null,
                          99,
                          null
                        ],
                        "declarations": [
                          null,
                          {
                            "constant": false,
                            "id": 97,
                            "mutability": "mutable",
                            "name": "prevRoundPrice",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 140,
                            "src": "1309:21:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "typeName": {
                              "id": 96,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1309:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          null,
                          {
                            "constant": false,
                            "id": 99,
                            "mutability": "mutable",
                            "name": "prevRoundTimestamp",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 140,
                            "src": "1334:26:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 98,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1334:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 104,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 102,
                              "name": "roundId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "1390:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 100,
                              "name": "_chainlink",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19,
                              "src": "1366:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$932",
                                "typeString": "contract AggregatorV3Interface"
                              }
                            },
                            "id": 101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getRoundData",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 918,
                            "src": "1366:23:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint80_$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                              "typeString": "function (uint80) view external returns (uint80,int256,uint256,uint256,uint80)"
                            }
                          },
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1366:32:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                            "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1306:92:4"
                      },
                      {
                        "assignments": [
                          106
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 106,
                            "mutability": "mutable",
                            "name": "delt",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 140,
                            "src": "1407:12:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 105,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1407:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 111,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 109,
                              "name": "prevRoundTimestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "1436:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 107,
                              "name": "timestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57,
                              "src": "1422:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 572,
                            "src": "1422:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1422:33:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1407:48:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 112,
                            "name": "priceCumulative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "1463:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 119,
                                        "name": "delt",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 106,
                                        "src": "1518:4:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 118,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1511:6:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_int256_$",
                                        "typeString": "type(int256)"
                                      },
                                      "typeName": {
                                        "id": 117,
                                        "name": "int256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1511:6:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": null,
                                          "typeString": null
                                        }
                                      }
                                    },
                                    "id": 120,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1511:12:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 115,
                                    "name": "price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 55,
                                    "src": "1501:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "id": 116,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 780,
                                  "src": "1501:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
                                    "typeString": "function (int256,int256) pure returns (int256)"
                                  }
                                },
                                "id": 121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1501:23:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 113,
                                "name": "priceCumulative",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74,
                                "src": "1481:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "id": 114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 900,
                              "src": "1481:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
                                "typeString": "function (int256,int256) pure returns (int256)"
                              }
                            },
                            "id": 122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1481:44:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "1463:62:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "1463:62:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 125,
                            "name": "period",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "1533:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 128,
                                "name": "delt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 106,
                                "src": "1553:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 126,
                                "name": "period",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70,
                                "src": "1542:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 555,
                              "src": "1542:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1542:16:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1533:25:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 131,
                        "nodeType": "ExpressionStatement",
                        "src": "1533:25:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 132,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "1567:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 133,
                            "name": "prevRoundTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "1579:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1567:30:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 135,
                        "nodeType": "ExpressionStatement",
                        "src": "1567:30:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 136,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "1605:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 137,
                            "name": "prevRoundPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "1613:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "1605:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "1605:22:4"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 81,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "1215:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 82,
                      "name": "rounds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "1219:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1215:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 141,
                  "initializationExpression": {
                    "assignments": [
                      78
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 78,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 141,
                        "src": "1202:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 77,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1202:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 80,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1212:1:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1202:11:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 85,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1227:3:4",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 84,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "1227:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 86,
                    "nodeType": "ExpressionStatement",
                    "src": "1227:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "1197:437:4"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 142,
                      "name": "period",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "1644:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1654:1:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1644:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 156,
                  "nodeType": "IfStatement",
                  "src": "1640:75:4",
                  "trueBody": {
                    "id": 155,
                    "nodeType": "Block",
                    "src": "1657:58:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 145,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "1665:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 150,
                                    "name": "period",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 70,
                                    "src": "1700:6:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 149,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1693:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": {
                                    "id": 148,
                                    "name": "int256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1693:6:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 151,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1693:14:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 146,
                                "name": "priceCumulative",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74,
                                "src": "1673:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "id": 147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 820,
                              "src": "1673:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
                                "typeString": "function (int256,int256) pure returns (int256)"
                              }
                            },
                            "id": 152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1673:35:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "1665:43:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 154,
                        "nodeType": "ExpressionStatement",
                        "src": "1665:43:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 157,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "1728:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 158,
                        "name": "period",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "1735:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 159,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1727:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$",
                      "typeString": "tuple(int256,uint256)"
                    }
                  },
                  "functionReturnParameters": 51,
                  "id": 160,
                  "nodeType": "Return",
                  "src": "1720:22:4"
                }
              ]
            },
            "documentation": null,
            "id": 162,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_fetch",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "827:2:4"
            },
            "returnParameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 162,
                  "src": "852:6:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "852:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 162,
                  "src": "860:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "860:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "851:17:4"
            },
            "scope": 186,
            "src": "812:935:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 172,
              "nodeType": "Block",
              "src": "1807:26:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 169,
                      "name": "_fetch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 162,
                      "src": "1820:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$_t_uint256_$",
                        "typeString": "function () view returns (int256,uint256)"
                      }
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1820:8:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$",
                      "typeString": "tuple(int256,uint256)"
                    }
                  },
                  "functionReturnParameters": 168,
                  "id": 171,
                  "nodeType": "Return",
                  "src": "1813:15:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "73d4a13a",
            "id": 173,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "data",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1764:2:4"
            },
            "returnParameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 173,
                  "src": "1790:6:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1790:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 173,
                  "src": "1798:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1798:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1789:17:4"
            },
            "scope": 186,
            "src": "1751:82:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              941
            ],
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "1908:26:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 181,
                      "name": "_fetch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 162,
                      "src": "1921:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$_t_uint256_$",
                        "typeString": "function () view returns (int256,uint256)"
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1921:8:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$",
                      "typeString": "tuple(int256,uint256)"
                    }
                  },
                  "functionReturnParameters": 180,
                  "id": 183,
                  "nodeType": "Return",
                  "src": "1914:15:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "67845e16",
            "id": 185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fetchData",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 175,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1873:8:4"
            },
            "parameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1855:2:4"
            },
            "returnParameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 177,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 185,
                  "src": "1891:6:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 176,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1891:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 185,
                  "src": "1899:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1899:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1890:17:4"
            },
            "scope": 186,
            "src": "1837:97:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 187,
        "src": "403:1533:4"
      }
    ],
    "src": "47:1890:4"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516107243803806107248339818101604052604081101561003357600080fd5b508051602090910151600080546001600160a01b039093166001600160a01b0319938416811790915560018054909316179091556002556106ab806100796000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631b076edc1461005157806367845e161461007557806373d4a13a14610075578063a2e800ad14610096575b600080fd5b6100596100b0565b604080516001600160a01b039092168252519081900360200190f35b61007d6100bf565b6040805192835260208301919091528051918290030190f35b61009e6100d2565b60408051918252519081900360200190f35b6001546001600160a01b031681565b6000806100ca6100d8565b915091509091565b60025481565b60008060008060008060009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561012d57600080fd5b505afa158015610141573d6000803e3d6000fd5b505050506040513d60a081101561015757600080fd5b50805160208201516060909201519094509092509050806101a95760405162461bcd60e51b815260040180806020018281038252602481526020018061060a6024913960400191505060405180910390fd5b600080805b6002548110156102bf5769ffffffffffffffffffff86166101ce576102bf565b6000805460408051639a6fc8f560e01b815269ffffffffffffffffffff600019909a01998a166004820152905183926001600160a01b031691639a6fc8f59160248083019260a0929190829003018186803b15801561022c57600080fd5b505afa158015610240573d6000803e3d6000fd5b505050506040513d60a081101561025657600080fd5b50602081015160609091015190925090506000610279878363ffffffff6102e616565b905061029b61028e898363ffffffff61033116565b869063ffffffff6103da16565b94506102ad868263ffffffff61043f16565b929750909550909350506001016101ae565b5081156102d9576102d6818363ffffffff61049916565b93505b5091945090925050509091565b600061032883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610551565b90505b92915050565b6000826103405750600061032b565b826000191480156103545750600160ff1b82145b156103905760405162461bcd60e51b815260040180806020018281038252602781526020018061064f6027913960400191505060405180910390fd5b8282028284828161039d57fe5b05146103285760405162461bcd60e51b815260040180806020018281038252602781526020018061064f6027913960400191505060405180910390fd5b60008282018183128015906103ef5750838112155b80610404575060008312801561040457508381125b6103285760405162461bcd60e51b81526004018080602001828103825260218152602001806105e96021913960400191505060405180910390fd5b600082820183811015610328576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000816104ed576040805162461bcd60e51b815260206004820181905260248201527f5369676e6564536166654d6174683a206469766973696f6e206279207a65726f604482015290519081900360640190fd5b816000191480156105015750600160ff1b83145b1561053d5760405162461bcd60e51b815260040180806020018281038252602181526020018061062e6021913960400191505060405180910390fd5b600082848161054857fe5b05949350505050565b600081848411156105e05760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156105a557818101518382015260200161058d565b50505050905090810190601f1680156105d25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe5369676e6564536166654d6174683a206164646974696f6e206f766572666c6f774f564c436861696e6c696e6b466565643a20726f756e64206e6f7420636f6d706c6574655369676e6564536166654d6174683a206469766973696f6e206f766572666c6f775369676e6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220a1256966ebb5c2139f0d23a6b4d7f48aaa0f2bfe9b35442ba2c7e6f762f0b5c264736f6c63430006080033",
  "bytecodeSha1": "73c02f6f89ef3937c3f085550297cb70ce7513ec",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.8"
  },
  "contractName": "OVLChainlinkFeed",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "SafeMath.add": {
          "23": [
            986,
            992,
            true
          ]
        },
        "SafeMath.sub": {
          "24": [
            1859,
            1865,
            true
          ]
        }
      },
      "2": {
        "SignedSafeMath.add": {
          "29": [
            2559,
            2565,
            false
          ],
          "30": [
            2569,
            2575,
            true
          ],
          "31": [
            2581,
            2586,
            false
          ],
          "32": [
            2590,
            2595,
            true
          ]
        },
        "SignedSafeMath.div": {
          "33": [
            1583,
            1589,
            true
          ],
          "34": [
            1646,
            1653,
            false
          ],
          "35": [
            1657,
            1673,
            true
          ]
        },
        "SignedSafeMath.mul": {
          "25": [
            783,
            789,
            false
          ],
          "26": [
            844,
            851,
            false
          ],
          "27": [
            855,
            871,
            true
          ],
          "28": [
            961,
            971,
            true
          ]
        }
      },
      "4": {
        "OVLChainlinkFeed._fetch": {
          "20": [
            1048,
            1061,
            true
          ],
          "21": [
            1244,
            1256,
            false
          ],
          "22": [
            1644,
            1655,
            false
          ]
        }
      },
      "8": {}
    },
    "statements": {
      "0": {},
      "1": {
        "SafeMath.add": {
          "16": [
            978,
            1024
          ]
        },
        "SafeMath.sub": {
          "11": [
            1398,
            1448
          ],
          "19": [
            1851,
            1880
          ]
        }
      },
      "2": {
        "SignedSafeMath.add": {
          "15": [
            2550,
            2634
          ]
        },
        "SignedSafeMath.div": {
          "17": [
            1575,
            1626
          ],
          "18": [
            1636,
            1712
          ]
        },
        "SignedSafeMath.mul": {
          "12": [
            805,
            813
          ],
          "13": [
            834,
            916
          ],
          "14": [
            953,
            1015
          ]
        }
      },
      "4": {
        "OVLChainlinkFeed._fetch": {
          "1": [
            1040,
            1102
          ],
          "2": [
            1268,
            1273
          ],
          "3": [
            1289,
            1298
          ],
          "4": [
            1463,
            1525
          ],
          "5": [
            1533,
            1558
          ],
          "6": [
            1605,
            1627
          ],
          "7": [
            1567,
            1597
          ],
          "8": [
            1227,
            1230
          ],
          "9": [
            1665,
            1708
          ],
          "10": [
            1720,
            1742
          ]
        },
        "OVLChainlinkFeed.fetchData": {
          "0": [
            1914,
            1929
          ]
        }
      },
      "8": {}
    }
  },
  "dependencies": [
    "Context",
    "IOVLFeed",
    "SafeMath",
    "SignedSafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80631b076edc1461005157806367845e161461007557806373d4a13a14610075578063a2e800ad14610096575b600080fd5b6100596100b0565b604080516001600160a01b039092168252519081900360200190f35b61007d6100bf565b6040805192835260208301919091528051918290030190f35b61009e6100d2565b60408051918252519081900360200190f35b6001546001600160a01b031681565b6000806100ca6100d8565b915091509091565b60025481565b60008060008060008060009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561012d57600080fd5b505afa158015610141573d6000803e3d6000fd5b505050506040513d60a081101561015757600080fd5b50805160208201516060909201519094509092509050806101a95760405162461bcd60e51b815260040180806020018281038252602481526020018061060a6024913960400191505060405180910390fd5b600080805b6002548110156102bf5769ffffffffffffffffffff86166101ce576102bf565b6000805460408051639a6fc8f560e01b815269ffffffffffffffffffff600019909a01998a166004820152905183926001600160a01b031691639a6fc8f59160248083019260a0929190829003018186803b15801561022c57600080fd5b505afa158015610240573d6000803e3d6000fd5b505050506040513d60a081101561025657600080fd5b50602081015160609091015190925090506000610279878363ffffffff6102e616565b905061029b61028e898363ffffffff61033116565b869063ffffffff6103da16565b94506102ad868263ffffffff61043f16565b929750909550909350506001016101ae565b5081156102d9576102d6818363ffffffff61049916565b93505b5091945090925050509091565b600061032883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610551565b90505b92915050565b6000826103405750600061032b565b826000191480156103545750600160ff1b82145b156103905760405162461bcd60e51b815260040180806020018281038252602781526020018061064f6027913960400191505060405180910390fd5b8282028284828161039d57fe5b05146103285760405162461bcd60e51b815260040180806020018281038252602781526020018061064f6027913960400191505060405180910390fd5b60008282018183128015906103ef5750838112155b80610404575060008312801561040457508381125b6103285760405162461bcd60e51b81526004018080602001828103825260218152602001806105e96021913960400191505060405180910390fd5b600082820183811015610328576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000816104ed576040805162461bcd60e51b815260206004820181905260248201527f5369676e6564536166654d6174683a206469766973696f6e206279207a65726f604482015290519081900360640190fd5b816000191480156105015750600160ff1b83145b1561053d5760405162461bcd60e51b815260040180806020018281038252602181526020018061062e6021913960400191505060405180910390fd5b600082848161054857fe5b05949350505050565b600081848411156105e05760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156105a557818101518382015260200161058d565b50505050905090810190601f1680156105d25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe5369676e6564536166654d6174683a206164646974696f6e206f766572666c6f774f564c436861696e6c696e6b466565643a20726f756e64206e6f7420636f6d706c6574655369676e6564536166654d6174683a206469766973696f6e206f766572666c6f775369676e6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220a1256966ebb5c2139f0d23a6b4d7f48aaa0f2bfe9b35442ba2c7e6f762f0b5c264736f6c63430006080033",
  "deployedSourceMap": "403:1533:4:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;403:1533:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;565:25:4;;;:::i;:::-;;;;-1:-1:-1;;;;;565:25:4;;;;;;;;;;;;;;1837:97;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;594:21;;;:::i;:::-;;;;;;;;;;;;;;;;565:25;;;-1:-1:-1;;;;;565:25:4;;:::o;1837:97::-;1891:6;1899:7;1921:8;:6;:8::i;:::-;1914:15;;;;1837:97;;:::o;594:21::-;;;;:::o;812:935::-;852:6;860:7;951:14;967:12;983:17;1006:10;;;;;;;;;-1:-1:-1;;;;;1006:10:4;-1:-1:-1;;;;;1006:26:4;;:28;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1006:28:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1006:28:4;;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;1006:28:4;;;;;;;;;;;;;-1:-1:-1;1006:28:4;;-1:-1:-1;1006:28:4;-1:-1:-1;1048:13:4;1040:62;;;;-1:-1:-1;;;1040:62:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1141:14;;;1197:437;1219:6;;1215:1;:10;1197:437;;;1244:12;;;1240:42;;1268:5;;1240:42;1309:21;1366:10;;:32;;;-1:-1:-1;;;1366:32:4;;;-1:-1:-1;;1289:9:4;;;1366:32;;;;;;;;;1309:21;;-1:-1:-1;;;;;1366:10:4;;:23;;:32;;;;;;;;;;;;;;:10;:32;;;2:2:-1;;;;27:1;24;17:12;2:2;1366:32:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1366:32:4;;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;1366:32:4;;;;;;;;;;;-1:-1:-1;1366:32:4;-1:-1:-1;1407:12:4;1422:33;:9;1366:32;1422:33;:13;:33;:::i;:::-;1407:48;-1:-1:-1;1481:44:4;1501:23;:5;1407:48;1501:23;:9;:23;:::i;:::-;1481:15;;:44;:19;:44;:::i;:::-;1463:62;-1:-1:-1;1542:16:4;:6;1553:4;1542:16;:10;:16;:::i;:::-;1613:14;;-1:-1:-1;1579:18:4;;-1:-1:-1;1533:25:4;;-1:-1:-1;;1227:3:4;;1197:437;;;-1:-1:-1;1644:11:4;;1640:75;;1673:35;:15;1700:6;1673:35;:19;:35;:::i;:::-;1665:43;;1640:75;-1:-1:-1;1728:5:4;;-1:-1:-1;1735:6:4;;-1:-1:-1;;;812:935:4;;:::o;1321:134:1:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1398:50;;1321:134;;;;;:::o;487:554:2:-;543:6;783;779:45;;-1:-1:-1;812:1:2;805:8;;779:45;844:1;-1:-1:-1;;844:7:2;:27;;;;;-1:-1:-1;;;855:1:2;:16;844:27;842:30;834:82;;;;-1:-1:-1;;;834:82:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;938:5;;;942:1;938;:5;:1;961:5;;;;;:10;953:62;;;;-1:-1:-1;;;953:62:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2450:210;2506:6;2535:5;;;2559:6;;;;;;:16;;;2574:1;2569;:6;;2559:16;2558:38;;;;2585:1;2581;:5;:14;;;;;2594:1;2590;:5;2581:14;2550:84;;;;-1:-1:-1;;;2550:84:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;874:176:1;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;1501:264:2;1557:6;1583;1575:51;;;;;-1:-1:-1;;;1575:51:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1646:1;-1:-1:-1;;1646:7:2;:27;;;;;-1:-1:-1;;;1657:1:2;:16;1646:27;1644:30;1636:76;;;;-1:-1:-1;;;1636:76:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1723:8;1738:1;1734;:5;;;;;;;1501:264;-1:-1:-1;;;;1501:264:2:o;1746:187:1:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1851:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:1;;;1746:187::o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    403,
    1936
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1B076EDC EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x67845E16 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x73D4A13A EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0xA2E800AD EQ PUSH2 0x96 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x7D PUSH2 0xBF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x9E PUSH2 0xD2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCA PUSH2 0xD8 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x141 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP5 POP SWAP1 SWAP3 POP SWAP1 POP DUP1 PUSH2 0x1A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x60A PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x2BF JUMPI PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH2 0x1CE JUMPI PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x9A6FC8F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH10 0xFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 NOT SWAP1 SWAP11 ADD SWAP10 DUP11 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x9A6FC8F5 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x240 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x60 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 PUSH2 0x279 DUP8 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x2E6 AND JUMP JUMPDEST SWAP1 POP PUSH2 0x29B PUSH2 0x28E DUP10 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x331 AND JUMP JUMPDEST DUP7 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x3DA AND JUMP JUMPDEST SWAP5 POP PUSH2 0x2AD DUP7 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x43F AND JUMP JUMPDEST SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP1 SWAP4 POP POP PUSH1 0x1 ADD PUSH2 0x1AE JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0x2D9 JUMPI PUSH2 0x2D6 DUP2 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x499 AND JUMP JUMPDEST SWAP4 POP JUMPDEST POP SWAP2 SWAP5 POP SWAP1 SWAP3 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x328 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x551 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x340 JUMPI POP PUSH1 0x0 PUSH2 0x32B JUMP JUMPDEST DUP3 PUSH1 0x0 NOT EQ DUP1 ISZERO PUSH2 0x354 JUMPI POP PUSH1 0x1 PUSH1 0xFF SHL DUP3 EQ JUMPDEST ISZERO PUSH2 0x390 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x64F PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x39D JUMPI INVALID JUMPDEST SDIV EQ PUSH2 0x328 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x64F PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP2 DUP4 SLT DUP1 ISZERO SWAP1 PUSH2 0x3EF JUMPI POP DUP4 DUP2 SLT ISZERO JUMPDEST DUP1 PUSH2 0x404 JUMPI POP PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0x404 JUMPI POP DUP4 DUP2 SLT JUMPDEST PUSH2 0x328 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5E9 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x328 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x4ED JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5369676E6564536166654D6174683A206469766973696F6E206279207A65726F PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 NOT EQ DUP1 ISZERO PUSH2 0x501 JUMPI POP PUSH1 0x1 PUSH1 0xFF SHL DUP4 EQ JUMPDEST ISZERO PUSH2 0x53D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x62E PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0x548 JUMPI INVALID JUMPDEST SDIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x5E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5A5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x58D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x5D2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP INVALID MSTORE8 PUSH10 0x676E6564536166654D61 PUSH21 0x683A206164646974696F6E206F766572666C6F774F JUMP 0x4C NUMBER PUSH9 0x61696E6C696E6B4665 PUSH6 0x643A20726F75 PUSH15 0x64206E6F7420636F6D706C65746553 PUSH10 0x676E6564536166654D61 PUSH21 0x683A206469766973696F6E206F766572666C6F7753 PUSH10 0x676E6564536166654D61 PUSH21 0x683A206D756C7469706C69636174696F6E206F7665 PUSH19 0x666C6F77A2646970667358221220A1256966EB 0xB5 0xC2 SGT SWAP16 0xD 0x23 0xA6 0xB4 0xD7 DELEGATECALL DUP11 0xAA 0xF 0x2B INVALID SWAP12 CALLDATALOAD DIFFICULTY 0x2B LOG2 0xC7 0xE6 0xF7 PUSH3 0xF0B5C2 PUSH5 0x736F6C6343 STOP MOD ADDMOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        403,
        1936
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "REVERT",
      "path": "4"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        403,
        1936
      ],
      "op": "POP",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "LT",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "29": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "SHR",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x1B076EDC"
    },
    "38": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "EQ",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "DUP1",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x67845E16"
    },
    "49": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "EQ",
      "path": "4"
    },
    "50": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x75"
    },
    "53": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "54": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "DUP1",
      "path": "4"
    },
    "55": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x73D4A13A"
    },
    "60": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "EQ",
      "path": "4"
    },
    "61": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x75"
    },
    "64": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "65": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "DUP1",
      "path": "4"
    },
    "66": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA2E800AD"
    },
    "71": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "EQ",
      "path": "4"
    },
    "72": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x96"
    },
    "75": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "76": {
      "fn": null,
      "offset": [
        403,
        1936
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "77": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "79": {
      "op": "DUP1"
    },
    "80": {
      "first_revert": true,
      "op": "REVERT"
    },
    "81": {
      "offset": [
        565,
        590
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "82": {
      "fn": null,
      "offset": [
        565,
        590
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x59"
    },
    "85": {
      "fn": null,
      "offset": [
        565,
        590
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB0"
    },
    "88": {
      "fn": null,
      "jump": "i",
      "offset": [
        565,
        590
      ],
      "op": "JUMP",
      "path": "4"
    },
    "89": {
      "fn": null,
      "offset": [
        565,
        590
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "90": {
      "fn": null,
      "offset": [
        565,
        590
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "92": {
      "fn": null,
      "offset": [
        565,
        590
      ],
      "op": "DUP1",
      "path": "4"
    },
    "93": {
      "fn": null,
      "offset": [
        565,
        590
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "94": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "96": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "98": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "100": {
      "op": "SHL"
    },
    "101": {
      "op": "SUB"
    },
    "102": {
      "offset": [
        565,
        590
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "103": {
      "fn": null,
      "offset": [
        565,
        590
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "104": {
      "fn": null,
      "offset": [
        565,
        590
      ],
      "op": "AND",
      "path": "4"
    },
    "105": {
      "fn": null,
      "offset": [
        565,
        590
      ],
      "op": "DUP3",
      "path": "4"
    },
    "106": {
      "fn": null,
      "offset": [
        565,
        590
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "107": {
      "fn": null,
      "offset": [
        565,
        590
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "108": {
      "fn": null,
      "offset": [
        565,
        590
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "109": {
      "fn": null,
      "offset": [
        565,
        590
      ],
      "op": "DUP2",
      "path": "4"
    },
    "110": {
      "fn": null,
      "offset": [
        565,
        590
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "111": {
      "fn": null,
      "offset": [
        565,
        590
      ],
      "op": "SUB",
      "path": "4"
    },
    "112": {
      "fn": null,
      "offset": [
        565,
        590
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "114": {
      "fn": null,
      "offset": [
        565,
        590
      ],
      "op": "ADD",
      "path": "4"
    },
    "115": {
      "fn": null,
      "offset": [
        565,
        590
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "116": {
      "fn": null,
      "offset": [
        565,
        590
      ],
      "op": "RETURN",
      "path": "4"
    },
    "117": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "118": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7D"
    },
    "121": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBF"
    },
    "124": {
      "fn": "OVLChainlinkFeed.fetchData",
      "jump": "i",
      "offset": [
        1837,
        1934
      ],
      "op": "JUMP",
      "path": "4"
    },
    "125": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "126": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "128": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "DUP1",
      "path": "4"
    },
    "129": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "130": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "131": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "DUP4",
      "path": "4"
    },
    "132": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "133": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "135": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "DUP4",
      "path": "4"
    },
    "136": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "ADD",
      "path": "4"
    },
    "137": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "138": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "139": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "140": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "141": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "DUP1",
      "path": "4"
    },
    "142": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "143": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "144": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "DUP3",
      "path": "4"
    },
    "145": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "146": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "SUB",
      "path": "4"
    },
    "147": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "ADD",
      "path": "4"
    },
    "148": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "149": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "RETURN",
      "path": "4"
    },
    "150": {
      "offset": [
        594,
        615
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "151": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        594,
        615
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9E"
    },
    "154": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        594,
        615
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD2"
    },
    "157": {
      "fn": "OVLChainlinkFeed.fetchData",
      "jump": "i",
      "offset": [
        594,
        615
      ],
      "op": "JUMP",
      "path": "4"
    },
    "158": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        594,
        615
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "159": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        594,
        615
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "161": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        594,
        615
      ],
      "op": "DUP1",
      "path": "4"
    },
    "162": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        594,
        615
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "163": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        594,
        615
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "164": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        594,
        615
      ],
      "op": "DUP3",
      "path": "4"
    },
    "165": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        594,
        615
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "166": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        594,
        615
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "167": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        594,
        615
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "168": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        594,
        615
      ],
      "op": "DUP2",
      "path": "4"
    },
    "169": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        594,
        615
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "170": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        594,
        615
      ],
      "op": "SUB",
      "path": "4"
    },
    "171": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        594,
        615
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "173": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        594,
        615
      ],
      "op": "ADD",
      "path": "4"
    },
    "174": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        594,
        615
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "175": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        594,
        615
      ],
      "op": "RETURN",
      "path": "4"
    },
    "176": {
      "offset": [
        565,
        590
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "177": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        565,
        590
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "179": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        565,
        590
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "186": {
      "op": "SHL"
    },
    "187": {
      "op": "SUB"
    },
    "188": {
      "offset": [
        565,
        590
      ],
      "op": "AND",
      "path": "4"
    },
    "189": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        565,
        590
      ],
      "op": "DUP2",
      "path": "4"
    },
    "190": {
      "fn": "OVLChainlinkFeed.fetchData",
      "jump": "o",
      "offset": [
        565,
        590
      ],
      "op": "JUMP",
      "path": "4"
    },
    "191": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "192": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1891,
        1897
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "194": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1899,
        1906
      ],
      "op": "DUP1",
      "path": "4"
    },
    "195": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1921,
        1929
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 0,
      "value": "0xCA"
    },
    "198": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1921,
        1927
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD8"
    },
    "201": {
      "fn": "OVLChainlinkFeed.fetchData",
      "jump": "i",
      "offset": [
        1921,
        1929
      ],
      "op": "JUMP",
      "path": "4"
    },
    "202": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1921,
        1929
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "203": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1914,
        1929
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "204": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1914,
        1929
      ],
      "op": "POP",
      "path": "4"
    },
    "205": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1914,
        1929
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "206": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1914,
        1929
      ],
      "op": "POP",
      "path": "4"
    },
    "207": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "208": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        1837,
        1934
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "209": {
      "fn": "OVLChainlinkFeed.fetchData",
      "jump": "o",
      "offset": [
        1837,
        1934
      ],
      "op": "JUMP",
      "path": "4"
    },
    "210": {
      "offset": [
        594,
        615
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "211": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        594,
        615
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "213": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        594,
        615
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "214": {
      "fn": "OVLChainlinkFeed.fetchData",
      "offset": [
        594,
        615
      ],
      "op": "DUP2",
      "path": "4"
    },
    "215": {
      "fn": "OVLChainlinkFeed.fetchData",
      "jump": "o",
      "offset": [
        594,
        615
      ],
      "op": "JUMP",
      "path": "4"
    },
    "216": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        812,
        1747
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "217": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        852,
        858
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "219": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        860,
        867
      ],
      "op": "DUP1",
      "path": "4"
    },
    "220": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        951,
        965
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "222": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        967,
        979
      ],
      "op": "DUP1",
      "path": "4"
    },
    "223": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        983,
        1000
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "225": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1016
      ],
      "op": "DUP1",
      "path": "4"
    },
    "226": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1016
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "228": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1016
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "229": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1016
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "230": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1016
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "231": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1016
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "234": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1016
      ],
      "op": "EXP",
      "path": "4"
    },
    "235": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1016
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "236": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1016
      ],
      "op": "DIV",
      "path": "4"
    },
    "237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "241": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "243": {
      "op": "SHL"
    },
    "244": {
      "op": "SUB"
    },
    "245": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1016
      ],
      "op": "AND",
      "path": "4"
    },
    "246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "252": {
      "op": "SHL"
    },
    "253": {
      "op": "SUB"
    },
    "254": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1032
      ],
      "op": "AND",
      "path": "4"
    },
    "255": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1032
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFEAF968C"
    },
    "260": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "262": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "263": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "DUP2",
      "path": "4"
    },
    "264": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "269": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "AND",
      "path": "4"
    },
    "270": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "272": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "SHL",
      "path": "4"
    },
    "273": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "DUP2",
      "path": "4"
    },
    "274": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "275": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "277": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "ADD",
      "path": "4"
    },
    "278": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA0"
    },
    "280": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "282": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "283": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "DUP1",
      "path": "4"
    },
    "284": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "DUP4",
      "path": "4"
    },
    "285": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "SUB",
      "path": "4"
    },
    "286": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "DUP2",
      "path": "4"
    },
    "287": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "DUP7",
      "path": "4"
    },
    "288": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "DUP1",
      "path": "4"
    },
    "289": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "290": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "291": {
      "op": "DUP1"
    },
    "292": {
      "op": "ISZERO"
    },
    "293": {
      "op": "PUSH2",
      "value": "0x12D"
    },
    "296": {
      "op": "JUMPI"
    },
    "297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "299": {
      "op": "DUP1"
    },
    "300": {
      "op": "REVERT"
    },
    "301": {
      "op": "JUMPDEST"
    },
    "302": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "POP",
      "path": "4"
    },
    "303": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "GAS",
      "path": "4"
    },
    "304": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "305": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "306": {
      "op": "DUP1"
    },
    "307": {
      "op": "ISZERO"
    },
    "308": {
      "op": "PUSH2",
      "value": "0x141"
    },
    "311": {
      "op": "JUMPI"
    },
    "312": {
      "op": "RETURNDATASIZE"
    },
    "313": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "315": {
      "op": "DUP1"
    },
    "316": {
      "op": "RETURNDATACOPY"
    },
    "317": {
      "op": "RETURNDATASIZE"
    },
    "318": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "320": {
      "op": "REVERT"
    },
    "321": {
      "op": "JUMPDEST"
    },
    "322": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "POP",
      "path": "4"
    },
    "323": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "POP",
      "path": "4"
    },
    "324": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "POP",
      "path": "4"
    },
    "325": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "POP",
      "path": "4"
    },
    "326": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "328": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "329": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "330": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "332": {
      "op": "DUP2"
    },
    "333": {
      "op": "LT"
    },
    "334": {
      "op": "ISZERO"
    },
    "335": {
      "op": "PUSH2",
      "value": "0x157"
    },
    "338": {
      "op": "JUMPI"
    },
    "339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "341": {
      "op": "DUP1"
    },
    "342": {
      "op": "REVERT"
    },
    "343": {
      "op": "JUMPDEST"
    },
    "344": {
      "op": "POP"
    },
    "345": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "DUP1",
      "path": "4"
    },
    "346": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "347": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "349": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "DUP3",
      "path": "4"
    },
    "350": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "ADD",
      "path": "4"
    },
    "351": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "352": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "354": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "355": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "356": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "ADD",
      "path": "4"
    },
    "357": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "358": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "359": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "360": {
      "op": "POP"
    },
    "361": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "362": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "363": {
      "op": "POP"
    },
    "364": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1006,
        1034
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "365": {
      "op": "POP"
    },
    "366": {
      "branch": 20,
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1048,
        1061
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 1
    },
    "367": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A9"
    },
    "370": {
      "branch": 20,
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "371": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "373": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "374": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "378": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "380": {
      "op": "SHL"
    },
    "381": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "DUP2",
      "path": "4"
    },
    "382": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "383": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "385": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "ADD",
      "path": "4"
    },
    "386": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "DUP1",
      "path": "4"
    },
    "387": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "DUP1",
      "path": "4"
    },
    "388": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "390": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "ADD",
      "path": "4"
    },
    "391": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "DUP3",
      "path": "4"
    },
    "392": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "DUP2",
      "path": "4"
    },
    "393": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "SUB",
      "path": "4"
    },
    "394": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "DUP3",
      "path": "4"
    },
    "395": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "396": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "398": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "DUP2",
      "path": "4"
    },
    "399": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "400": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "402": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "ADD",
      "path": "4"
    },
    "403": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "DUP1",
      "path": "4"
    },
    "404": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x60A"
    },
    "407": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "409": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "410": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "411": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "413": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "ADD",
      "path": "4"
    },
    "414": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "415": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "POP",
      "path": "4"
    },
    "416": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "POP",
      "path": "4"
    },
    "417": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "419": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "420": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "DUP1",
      "path": "4"
    },
    "421": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "422": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "SUB",
      "path": "4"
    },
    "423": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "424": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "REVERT",
      "path": "4"
    },
    "425": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1040,
        1102
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "426": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1141,
        1155
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "428": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1141,
        1155
      ],
      "op": "DUP1",
      "path": "4"
    },
    "429": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1141,
        1155
      ],
      "op": "DUP1",
      "path": "4"
    },
    "430": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1197,
        1634
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "431": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1219,
        1225
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "433": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1219,
        1225
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "434": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1215,
        1216
      ],
      "op": "DUP2",
      "path": "4"
    },
    "435": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1215,
        1225
      ],
      "op": "LT",
      "path": "4"
    },
    "436": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1197,
        1634
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "437": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1197,
        1634
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2BF"
    },
    "440": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1197,
        1634
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "441": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1244,
        1256
      ],
      "op": "PUSH10",
      "path": "4",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "452": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1244,
        1256
      ],
      "op": "DUP7",
      "path": "4"
    },
    "453": {
      "branch": 21,
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1244,
        1256
      ],
      "op": "AND",
      "path": "4"
    },
    "454": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1240,
        1282
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1CE"
    },
    "457": {
      "branch": 21,
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1240,
        1282
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "458": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1268,
        1273
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 2,
      "value": "0x2BF"
    },
    "461": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1268,
        1273
      ],
      "op": "JUMP",
      "path": "4"
    },
    "462": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1240,
        1282
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "463": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1309,
        1330
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "465": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1376
      ],
      "op": "DUP1",
      "path": "4"
    },
    "466": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1376
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "467": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "469": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "DUP1",
      "path": "4"
    },
    "470": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "471": {
      "op": "PUSH4",
      "value": "0x9A6FC8F5"
    },
    "476": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "478": {
      "op": "SHL"
    },
    "479": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "DUP2",
      "path": "4"
    },
    "480": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "481": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "PUSH10",
      "path": "4",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "492": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "494": {
      "op": "NOT"
    },
    "495": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1289,
        1298
      ],
      "op": "SWAP1",
      "path": "4",
      "statement": 3
    },
    "496": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1289,
        1298
      ],
      "op": "SWAP11",
      "path": "4"
    },
    "497": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1289,
        1298
      ],
      "op": "ADD",
      "path": "4"
    },
    "498": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "SWAP10",
      "path": "4"
    },
    "499": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "DUP11",
      "path": "4"
    },
    "500": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "AND",
      "path": "4"
    },
    "501": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "503": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "DUP3",
      "path": "4"
    },
    "504": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "ADD",
      "path": "4"
    },
    "505": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "506": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "507": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "508": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1309,
        1330
      ],
      "op": "DUP4",
      "path": "4"
    },
    "509": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1309,
        1330
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "514": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "516": {
      "op": "SHL"
    },
    "517": {
      "op": "SUB"
    },
    "518": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1376
      ],
      "op": "AND",
      "path": "4"
    },
    "519": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1376
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "520": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1389
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x9A6FC8F5"
    },
    "525": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1389
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "526": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "528": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "DUP1",
      "path": "4"
    },
    "529": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "DUP4",
      "path": "4"
    },
    "530": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "ADD",
      "path": "4"
    },
    "531": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "532": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA0"
    },
    "534": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "535": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "536": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "537": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "DUP3",
      "path": "4"
    },
    "538": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "539": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "SUB",
      "path": "4"
    },
    "540": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "ADD",
      "path": "4"
    },
    "541": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "DUP2",
      "path": "4"
    },
    "542": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1376
      ],
      "op": "DUP7",
      "path": "4"
    },
    "543": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "DUP1",
      "path": "4"
    },
    "544": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "545": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "546": {
      "op": "DUP1"
    },
    "547": {
      "op": "ISZERO"
    },
    "548": {
      "op": "PUSH2",
      "value": "0x22C"
    },
    "551": {
      "op": "JUMPI"
    },
    "552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "554": {
      "op": "DUP1"
    },
    "555": {
      "op": "REVERT"
    },
    "556": {
      "op": "JUMPDEST"
    },
    "557": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "POP",
      "path": "4"
    },
    "558": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "GAS",
      "path": "4"
    },
    "559": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "560": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "561": {
      "op": "DUP1"
    },
    "562": {
      "op": "ISZERO"
    },
    "563": {
      "op": "PUSH2",
      "value": "0x240"
    },
    "566": {
      "op": "JUMPI"
    },
    "567": {
      "op": "RETURNDATASIZE"
    },
    "568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "570": {
      "op": "DUP1"
    },
    "571": {
      "op": "RETURNDATACOPY"
    },
    "572": {
      "op": "RETURNDATASIZE"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "575": {
      "op": "REVERT"
    },
    "576": {
      "op": "JUMPDEST"
    },
    "577": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "POP",
      "path": "4"
    },
    "578": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "POP",
      "path": "4"
    },
    "579": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "POP",
      "path": "4"
    },
    "580": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "POP",
      "path": "4"
    },
    "581": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "583": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "584": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "585": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "587": {
      "op": "DUP2"
    },
    "588": {
      "op": "LT"
    },
    "589": {
      "op": "ISZERO"
    },
    "590": {
      "op": "PUSH2",
      "value": "0x256"
    },
    "593": {
      "op": "JUMPI"
    },
    "594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "596": {
      "op": "DUP1"
    },
    "597": {
      "op": "REVERT"
    },
    "598": {
      "op": "JUMPDEST"
    },
    "599": {
      "op": "POP"
    },
    "600": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "602": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "DUP2",
      "path": "4"
    },
    "603": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "ADD",
      "path": "4"
    },
    "604": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "605": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "607": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "608": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "609": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "ADD",
      "path": "4"
    },
    "610": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "611": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "612": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "613": {
      "op": "POP"
    },
    "614": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "615": {
      "op": "POP"
    },
    "616": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1407,
        1419
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "618": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1422,
        1455
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x279"
    },
    "621": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1422,
        1431
      ],
      "op": "DUP8",
      "path": "4"
    },
    "622": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1366,
        1398
      ],
      "op": "DUP4",
      "path": "4"
    },
    "623": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1422,
        1455
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "628": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1422,
        1435
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2E6"
    },
    "631": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1422,
        1455
      ],
      "op": "AND",
      "path": "4"
    },
    "632": {
      "fn": "OVLChainlinkFeed._fetch",
      "jump": "i",
      "offset": [
        1422,
        1455
      ],
      "op": "JUMP",
      "path": "4"
    },
    "633": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1422,
        1455
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "634": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1407,
        1455
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "635": {
      "op": "POP"
    },
    "636": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1481,
        1525
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 4,
      "value": "0x29B"
    },
    "639": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1501,
        1524
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x28E"
    },
    "642": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1501,
        1506
      ],
      "op": "DUP10",
      "path": "4"
    },
    "643": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1407,
        1455
      ],
      "op": "DUP4",
      "path": "4"
    },
    "644": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1501,
        1524
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "649": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1501,
        1510
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x331"
    },
    "652": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1501,
        1524
      ],
      "op": "AND",
      "path": "4"
    },
    "653": {
      "fn": "OVLChainlinkFeed._fetch",
      "jump": "i",
      "offset": [
        1501,
        1524
      ],
      "op": "JUMP",
      "path": "4"
    },
    "654": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1501,
        1524
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "655": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1481,
        1496
      ],
      "op": "DUP7",
      "path": "4"
    },
    "656": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1481,
        1496
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "657": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1481,
        1525
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "662": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1481,
        1500
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3DA"
    },
    "665": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1481,
        1525
      ],
      "op": "AND",
      "path": "4"
    },
    "666": {
      "fn": "OVLChainlinkFeed._fetch",
      "jump": "i",
      "offset": [
        1481,
        1525
      ],
      "op": "JUMP",
      "path": "4"
    },
    "667": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1481,
        1525
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "668": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1463,
        1525
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "669": {
      "op": "POP"
    },
    "670": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1542,
        1558
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 5,
      "value": "0x2AD"
    },
    "673": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1542,
        1548
      ],
      "op": "DUP7",
      "path": "4"
    },
    "674": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1553,
        1557
      ],
      "op": "DUP3",
      "path": "4"
    },
    "675": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1542,
        1558
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "680": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1542,
        1552
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x43F"
    },
    "683": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1542,
        1558
      ],
      "op": "AND",
      "path": "4"
    },
    "684": {
      "fn": "OVLChainlinkFeed._fetch",
      "jump": "i",
      "offset": [
        1542,
        1558
      ],
      "op": "JUMP",
      "path": "4"
    },
    "685": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1542,
        1558
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "686": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1613,
        1627
      ],
      "op": "SWAP3",
      "path": "4",
      "statement": 6
    },
    "687": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1613,
        1627
      ],
      "op": "SWAP8",
      "path": "4"
    },
    "688": {
      "op": "POP"
    },
    "689": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1579,
        1597
      ],
      "op": "SWAP1",
      "path": "4",
      "statement": 7
    },
    "690": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1579,
        1597
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "691": {
      "op": "POP"
    },
    "692": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1533,
        1558
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "693": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1533,
        1558
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "694": {
      "op": "POP"
    },
    "695": {
      "op": "POP"
    },
    "696": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1227,
        1230
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 8,
      "value": "0x1"
    },
    "698": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1227,
        1230
      ],
      "op": "ADD",
      "path": "4"
    },
    "699": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1197,
        1634
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1AE"
    },
    "702": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1197,
        1634
      ],
      "op": "JUMP",
      "path": "4"
    },
    "703": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1197,
        1634
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "704": {
      "op": "POP"
    },
    "705": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1644,
        1655
      ],
      "op": "DUP2",
      "path": "4"
    },
    "706": {
      "branch": 22,
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1644,
        1655
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "707": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1640,
        1715
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2D9"
    },
    "710": {
      "branch": 22,
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1640,
        1715
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "711": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1673,
        1708
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 9,
      "value": "0x2D6"
    },
    "714": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1673,
        1688
      ],
      "op": "DUP2",
      "path": "4"
    },
    "715": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1700,
        1706
      ],
      "op": "DUP4",
      "path": "4"
    },
    "716": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1673,
        1708
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "721": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1673,
        1692
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x499"
    },
    "724": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1673,
        1708
      ],
      "op": "AND",
      "path": "4"
    },
    "725": {
      "fn": "OVLChainlinkFeed._fetch",
      "jump": "i",
      "offset": [
        1673,
        1708
      ],
      "op": "JUMP",
      "path": "4"
    },
    "726": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1673,
        1708
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "727": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1665,
        1708
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "728": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1665,
        1708
      ],
      "op": "POP",
      "path": "4"
    },
    "729": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1640,
        1715
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "730": {
      "op": "POP"
    },
    "731": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1728,
        1733
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 10
    },
    "732": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1728,
        1733
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "733": {
      "op": "POP"
    },
    "734": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1735,
        1741
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "735": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        1735,
        1741
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "736": {
      "op": "POP"
    },
    "737": {
      "op": "POP"
    },
    "738": {
      "op": "POP"
    },
    "739": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        812,
        1747
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "740": {
      "fn": "OVLChainlinkFeed._fetch",
      "offset": [
        812,
        1747
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "741": {
      "fn": "OVLChainlinkFeed._fetch",
      "jump": "o",
      "offset": [
        812,
        1747
      ],
      "op": "JUMP",
      "path": "4"
    },
    "742": {
      "fn": "SafeMath.sub",
      "offset": [
        1321,
        1455
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "743": {
      "fn": "SafeMath.sub",
      "offset": [
        1379,
        1386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "745": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 11,
      "value": "0x328"
    },
    "748": {
      "fn": "SafeMath.sub",
      "offset": [
        1409,
        1410
      ],
      "op": "DUP4",
      "path": "1"
    },
    "749": {
      "fn": "SafeMath.sub",
      "offset": [
        1412,
        1413
      ],
      "op": "DUP4",
      "path": "1"
    },
    "750": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "752": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "753": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP1",
      "path": "1"
    },
    "754": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "756": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "ADD",
      "path": "1"
    },
    "757": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "759": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "760": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP1",
      "path": "1"
    },
    "761": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1E"
    },
    "763": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP2",
      "path": "1"
    },
    "764": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "765": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "767": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "ADD",
      "path": "1"
    },
    "768": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "801": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP2",
      "path": "1"
    },
    "802": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "803": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "POP",
      "path": "1"
    },
    "804": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1408
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x551"
    },
    "807": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1405,
        1448
      ],
      "op": "JUMP",
      "path": "1"
    },
    "808": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "809": {
      "fn": "SafeMath.sub",
      "offset": [
        1398,
        1448
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "810": {
      "fn": "SafeMath.sub",
      "offset": [
        1398,
        1448
      ],
      "op": "POP",
      "path": "1"
    },
    "811": {
      "fn": "SafeMath.sub",
      "offset": [
        1321,
        1455
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "812": {
      "fn": "SafeMath.sub",
      "offset": [
        1321,
        1455
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "813": {
      "fn": "SafeMath.sub",
      "offset": [
        1321,
        1455
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "814": {
      "fn": "SafeMath.sub",
      "offset": [
        1321,
        1455
      ],
      "op": "POP",
      "path": "1"
    },
    "815": {
      "fn": "SafeMath.sub",
      "offset": [
        1321,
        1455
      ],
      "op": "POP",
      "path": "1"
    },
    "816": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1321,
        1455
      ],
      "op": "JUMP",
      "path": "1"
    },
    "817": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        487,
        1041
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "818": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        543,
        549
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "820": {
      "branch": 25,
      "fn": "SignedSafeMath.mul",
      "offset": [
        783,
        789
      ],
      "op": "DUP3",
      "path": "2"
    },
    "821": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        779,
        824
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x340"
    },
    "824": {
      "branch": 25,
      "fn": "SignedSafeMath.mul",
      "offset": [
        779,
        824
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "825": {
      "op": "POP"
    },
    "826": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        812,
        813
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 12,
      "value": "0x0"
    },
    "828": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        805,
        813
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32B"
    },
    "831": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        805,
        813
      ],
      "op": "JUMP",
      "path": "2"
    },
    "832": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        779,
        824
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "833": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        844,
        845
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 13
    },
    "834": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "836": {
      "op": "NOT"
    },
    "837": {
      "branch": 26,
      "fn": "SignedSafeMath.mul",
      "offset": [
        844,
        851
      ],
      "op": "EQ",
      "path": "2"
    },
    "838": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        844,
        871
      ],
      "op": "DUP1",
      "path": "2"
    },
    "839": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        844,
        871
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "840": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        844,
        871
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x354"
    },
    "843": {
      "branch": 26,
      "fn": "SignedSafeMath.mul",
      "offset": [
        844,
        871
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "844": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        844,
        871
      ],
      "op": "POP",
      "path": "2"
    },
    "845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "847": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "849": {
      "op": "SHL"
    },
    "850": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        855,
        856
      ],
      "op": "DUP3",
      "path": "2"
    },
    "851": {
      "branch": 27,
      "fn": "SignedSafeMath.mul",
      "offset": [
        855,
        871
      ],
      "op": "EQ",
      "path": "2"
    },
    "852": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        844,
        871
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "853": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        842,
        872
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "854": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x390"
    },
    "857": {
      "branch": 27,
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "858": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "860": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "861": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "865": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "867": {
      "op": "SHL"
    },
    "868": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "DUP2",
      "path": "2"
    },
    "869": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "870": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "872": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "ADD",
      "path": "2"
    },
    "873": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "DUP1",
      "path": "2"
    },
    "874": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "DUP1",
      "path": "2"
    },
    "875": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "877": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "ADD",
      "path": "2"
    },
    "878": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "DUP3",
      "path": "2"
    },
    "879": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "DUP2",
      "path": "2"
    },
    "880": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "SUB",
      "path": "2"
    },
    "881": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "DUP3",
      "path": "2"
    },
    "882": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "883": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x27"
    },
    "885": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "DUP2",
      "path": "2"
    },
    "886": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "887": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "889": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "ADD",
      "path": "2"
    },
    "890": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "DUP1",
      "path": "2"
    },
    "891": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64F"
    },
    "894": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x27"
    },
    "896": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "897": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "898": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "900": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "ADD",
      "path": "2"
    },
    "901": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "902": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "POP",
      "path": "2"
    },
    "903": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "POP",
      "path": "2"
    },
    "904": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "906": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "907": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "DUP1",
      "path": "2"
    },
    "908": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "909": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "SUB",
      "path": "2"
    },
    "910": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "911": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "REVERT",
      "path": "2"
    },
    "912": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        834,
        916
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "913": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        938,
        943
      ],
      "op": "DUP3",
      "path": "2"
    },
    "914": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        938,
        943
      ],
      "op": "DUP3",
      "path": "2"
    },
    "915": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        938,
        943
      ],
      "op": "MUL",
      "path": "2"
    },
    "916": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        942,
        943
      ],
      "op": "DUP3",
      "path": "2"
    },
    "917": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        938,
        939
      ],
      "op": "DUP5",
      "path": "2"
    },
    "918": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        938,
        943
      ],
      "op": "DUP3",
      "path": "2"
    },
    "919": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        938,
        939
      ],
      "op": "DUP2",
      "path": "2"
    },
    "920": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        961,
        966
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 14,
      "value": "0x39D"
    },
    "923": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        961,
        966
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "924": {
      "dev": "Division by zero",
      "fn": "SignedSafeMath.mul",
      "offset": [
        961,
        966
      ],
      "op": "INVALID",
      "path": "2"
    },
    "925": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        961,
        966
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "926": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        961,
        966
      ],
      "op": "SDIV",
      "path": "2"
    },
    "927": {
      "branch": 28,
      "fn": "SignedSafeMath.mul",
      "offset": [
        961,
        971
      ],
      "op": "EQ",
      "path": "2"
    },
    "928": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x328"
    },
    "931": {
      "branch": 28,
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "932": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "934": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "935": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "939": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "941": {
      "op": "SHL"
    },
    "942": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "DUP2",
      "path": "2"
    },
    "943": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "944": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "946": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "ADD",
      "path": "2"
    },
    "947": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "DUP1",
      "path": "2"
    },
    "948": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "DUP1",
      "path": "2"
    },
    "949": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "951": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "ADD",
      "path": "2"
    },
    "952": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "DUP3",
      "path": "2"
    },
    "953": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "DUP2",
      "path": "2"
    },
    "954": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "SUB",
      "path": "2"
    },
    "955": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "DUP3",
      "path": "2"
    },
    "956": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "957": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x27"
    },
    "959": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "DUP2",
      "path": "2"
    },
    "960": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "961": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "963": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "ADD",
      "path": "2"
    },
    "964": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "DUP1",
      "path": "2"
    },
    "965": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64F"
    },
    "968": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x27"
    },
    "970": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "971": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "972": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "974": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "ADD",
      "path": "2"
    },
    "975": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "976": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "POP",
      "path": "2"
    },
    "977": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "POP",
      "path": "2"
    },
    "978": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "980": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "981": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "DUP1",
      "path": "2"
    },
    "982": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "983": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "SUB",
      "path": "2"
    },
    "984": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "985": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        953,
        1015
      ],
      "op": "REVERT",
      "path": "2"
    },
    "986": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2450,
        2660
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "987": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2506,
        2512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "989": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2535,
        2540
      ],
      "op": "DUP3",
      "path": "2"
    },
    "990": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2535,
        2540
      ],
      "op": "DUP3",
      "path": "2"
    },
    "991": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2535,
        2540
      ],
      "op": "ADD",
      "path": "2"
    },
    "992": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2559,
        2565
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 15
    },
    "993": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2559,
        2565
      ],
      "op": "DUP4",
      "path": "2"
    },
    "994": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2559,
        2565
      ],
      "op": "SLT",
      "path": "2"
    },
    "995": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2559,
        2565
      ],
      "op": "DUP1",
      "path": "2"
    },
    "996": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2559,
        2565
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "997": {
      "branch": 29,
      "fn": "SignedSafeMath.add",
      "offset": [
        2559,
        2565
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "998": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2559,
        2575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EF"
    },
    "1001": {
      "branch": 29,
      "fn": "SignedSafeMath.add",
      "offset": [
        2559,
        2575
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1002": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2559,
        2575
      ],
      "op": "POP",
      "path": "2"
    },
    "1003": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2574,
        2575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1004": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2569,
        2570
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1005": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2569,
        2575
      ],
      "op": "SLT",
      "path": "2"
    },
    "1006": {
      "branch": 30,
      "fn": "SignedSafeMath.add",
      "offset": [
        2569,
        2575
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1007": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2559,
        2575
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1008": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2558,
        2596
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1009": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2558,
        2596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x404"
    },
    "1012": {
      "branch": 30,
      "fn": "SignedSafeMath.add",
      "offset": [
        2558,
        2596
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1013": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2558,
        2596
      ],
      "op": "POP",
      "path": "2"
    },
    "1014": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2585,
        2586
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1016": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2581,
        2582
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1017": {
      "branch": 31,
      "fn": "SignedSafeMath.add",
      "offset": [
        2581,
        2586
      ],
      "op": "SLT",
      "path": "2"
    },
    "1018": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2581,
        2595
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1019": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2581,
        2595
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1020": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2581,
        2595
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x404"
    },
    "1023": {
      "branch": 31,
      "fn": "SignedSafeMath.add",
      "offset": [
        2581,
        2595
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1024": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2581,
        2595
      ],
      "op": "POP",
      "path": "2"
    },
    "1025": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2594,
        2595
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1026": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2590,
        2591
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1027": {
      "branch": 32,
      "fn": "SignedSafeMath.add",
      "offset": [
        2590,
        2595
      ],
      "op": "SLT",
      "path": "2"
    },
    "1028": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2581,
        2595
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1029": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x328"
    },
    "1032": {
      "branch": 32,
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1033": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1035": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1036": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1042": {
      "op": "SHL"
    },
    "1043": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1044": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1045": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1047": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "ADD",
      "path": "2"
    },
    "1048": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1049": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1050": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1052": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "ADD",
      "path": "2"
    },
    "1053": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1054": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1055": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "SUB",
      "path": "2"
    },
    "1056": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1057": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1058": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x21"
    },
    "1060": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1061": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1062": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1064": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "ADD",
      "path": "2"
    },
    "1065": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1066": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5E9"
    },
    "1069": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x21"
    },
    "1071": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1072": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "1073": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1075": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "ADD",
      "path": "2"
    },
    "1076": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1077": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "POP",
      "path": "2"
    },
    "1078": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "POP",
      "path": "2"
    },
    "1079": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1081": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1082": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1083": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1084": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "SUB",
      "path": "2"
    },
    "1085": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1086": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2550,
        2634
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1087": {
      "fn": "SafeMath.add",
      "offset": [
        874,
        1050
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1088": {
      "fn": "SafeMath.add",
      "offset": [
        932,
        939
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1090": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1091": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1092": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "ADD",
      "path": "1"
    },
    "1093": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 16
    },
    "1094": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1095": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "LT",
      "path": "1"
    },
    "1096": {
      "branch": 23,
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1097": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x328"
    },
    "1100": {
      "branch": 23,
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1101": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1103": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1104": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1105": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1111": {
      "op": "SHL"
    },
    "1112": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1113": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1114": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1116": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1118": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1119": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "1"
    },
    "1120": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1121": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1B"
    },
    "1123": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1125": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1126": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "1"
    },
    "1127": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1128": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "1161": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "1163": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1164": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "1"
    },
    "1165": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1166": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1167": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1168": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1169": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1170": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1171": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SUB",
      "path": "1"
    },
    "1172": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "1174": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "1"
    },
    "1175": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1176": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1177": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1501,
        1765
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1178": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1557,
        1563
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1180": {
      "branch": 33,
      "fn": "SignedSafeMath.div",
      "offset": [
        1583,
        1589
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 17
    },
    "1181": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4ED"
    },
    "1184": {
      "branch": 33,
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1185": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1187": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1188": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1189": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1195": {
      "op": "SHL"
    },
    "1196": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1197": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1198": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1200": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1202": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1203": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "ADD",
      "path": "2"
    },
    "1204": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1205": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1206": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1207": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "1209": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1210": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "ADD",
      "path": "2"
    },
    "1211": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1212": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x5369676E6564536166654D6174683A206469766973696F6E206279207A65726F"
    },
    "1245": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "1247": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1248": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "ADD",
      "path": "2"
    },
    "1249": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1250": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1251": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1252": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1253": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1254": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1255": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "SUB",
      "path": "2"
    },
    "1256": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "1258": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "ADD",
      "path": "2"
    },
    "1259": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1260": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1261": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1575,
        1626
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1262": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1646,
        1647
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 18
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1265": {
      "op": "NOT"
    },
    "1266": {
      "branch": 34,
      "fn": "SignedSafeMath.div",
      "offset": [
        1646,
        1653
      ],
      "op": "EQ",
      "path": "2"
    },
    "1267": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1646,
        1673
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1268": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1646,
        1673
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1269": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1646,
        1673
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x501"
    },
    "1272": {
      "branch": 34,
      "fn": "SignedSafeMath.div",
      "offset": [
        1646,
        1673
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1273": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1646,
        1673
      ],
      "op": "POP",
      "path": "2"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1278": {
      "op": "SHL"
    },
    "1279": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1657,
        1658
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1280": {
      "branch": 35,
      "fn": "SignedSafeMath.div",
      "offset": [
        1657,
        1673
      ],
      "op": "EQ",
      "path": "2"
    },
    "1281": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1646,
        1673
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1282": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1644,
        1674
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1283": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x53D"
    },
    "1286": {
      "branch": 35,
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1287": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1289": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1290": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1296": {
      "op": "SHL"
    },
    "1297": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1298": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1299": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1301": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "ADD",
      "path": "2"
    },
    "1302": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1303": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1304": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1306": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "ADD",
      "path": "2"
    },
    "1307": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1308": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1309": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "SUB",
      "path": "2"
    },
    "1310": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1311": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1312": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x21"
    },
    "1314": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1315": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1316": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1318": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "ADD",
      "path": "2"
    },
    "1319": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1320": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x62E"
    },
    "1323": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x21"
    },
    "1325": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1326": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "1327": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1329": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "ADD",
      "path": "2"
    },
    "1330": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1331": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "POP",
      "path": "2"
    },
    "1332": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "POP",
      "path": "2"
    },
    "1333": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1335": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1336": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1337": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1338": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "SUB",
      "path": "2"
    },
    "1339": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1340": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1341": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1636,
        1712
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1342": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1723,
        1731
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1344": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1738,
        1739
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1345": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1734,
        1735
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1346": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1734,
        1739
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1347": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1734,
        1739
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x548"
    },
    "1350": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1734,
        1739
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1351": {
      "dev": "Division by zero",
      "fn": "SignedSafeMath.div",
      "offset": [
        1734,
        1739
      ],
      "op": "INVALID",
      "path": "2"
    },
    "1352": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1734,
        1739
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1353": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1734,
        1739
      ],
      "op": "SDIV",
      "path": "2"
    },
    "1354": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1734,
        1739
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1355": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1501,
        1765
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1356": {
      "op": "POP"
    },
    "1357": {
      "op": "POP"
    },
    "1358": {
      "op": "POP"
    },
    "1359": {
      "op": "POP"
    },
    "1360": {
      "fn": "SignedSafeMath.div",
      "jump": "o",
      "offset": [
        1501,
        1765
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1361": {
      "fn": "SafeMath.sub",
      "offset": [
        1746,
        1933
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1362": {
      "fn": "SafeMath.sub",
      "offset": [
        1832,
        1839
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1364": {
      "fn": "SafeMath.sub",
      "offset": [
        1867,
        1879
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 19
    },
    "1365": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1366": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1367": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "GT",
      "path": "1"
    },
    "1368": {
      "branch": 24,
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1369": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5E0"
    },
    "1372": {
      "branch": 24,
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1373": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1375": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1376": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1380": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1382": {
      "op": "SHL"
    },
    "1383": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1384": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1385": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1387": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "1"
    },
    "1388": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1389": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1390": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1392": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "1"
    },
    "1393": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1394": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1395": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "1"
    },
    "1396": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1397": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1398": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1399": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1400": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1401": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1402": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1403": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1404": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1406": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "1"
    },
    "1407": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1408": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "1"
    },
    "1409": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1410": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1411": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1412": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1414": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "1"
    },
    "1415": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1416": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1417": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1418": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1421": {
      "op": "JUMPDEST"
    },
    "1422": {
      "op": "DUP4"
    },
    "1423": {
      "op": "DUP2"
    },
    "1424": {
      "op": "LT"
    },
    "1425": {
      "op": "ISZERO"
    },
    "1426": {
      "op": "PUSH2",
      "value": "0x5A5"
    },
    "1429": {
      "op": "JUMPI"
    },
    "1430": {
      "op": "DUP2"
    },
    "1431": {
      "op": "DUP2"
    },
    "1432": {
      "op": "ADD"
    },
    "1433": {
      "op": "MLOAD"
    },
    "1434": {
      "op": "DUP4"
    },
    "1435": {
      "op": "DUP3"
    },
    "1436": {
      "op": "ADD"
    },
    "1437": {
      "op": "MSTORE"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1440": {
      "op": "ADD"
    },
    "1441": {
      "op": "PUSH2",
      "value": "0x58D"
    },
    "1444": {
      "op": "JUMP"
    },
    "1445": {
      "op": "JUMPDEST"
    },
    "1446": {
      "op": "POP"
    },
    "1447": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "1"
    },
    "1448": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "1"
    },
    "1449": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "1"
    },
    "1450": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1451": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "1"
    },
    "1452": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1453": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1454": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "1"
    },
    "1455": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1456": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1458": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "AND",
      "path": "1"
    },
    "1459": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1460": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1461": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5D2"
    },
    "1464": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1465": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1466": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1467": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "1"
    },
    "1468": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1469": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1470": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1472": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1473": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1475": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "1"
    },
    "1476": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "1479": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "EXP",
      "path": "1"
    },
    "1480": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "1"
    },
    "1481": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "NOT",
      "path": "1"
    },
    "1482": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "AND",
      "path": "1"
    },
    "1483": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1484": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1485": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1487": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "1"
    },
    "1488": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1489": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "1"
    },
    "1490": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1491": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "1"
    },
    "1492": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1493": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "1"
    },
    "1494": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "1"
    },
    "1495": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "1"
    },
    "1496": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1498": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1499": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1500": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1501": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "1"
    },
    "1502": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1503": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1504": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1505": {
      "op": "POP"
    },
    "1506": {
      "op": "POP"
    },
    "1507": {
      "op": "POP"
    },
    "1508": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1509": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SUB",
      "path": "1"
    },
    "1510": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1511": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1746,
        1933
      ],
      "op": "JUMP",
      "path": "1"
    }
  },
  "sha1": "506785daf62f699af64c8d53bff1680073b4d035",
  "source": "// SPDX-License-Identifier: AGPL-3.0-or-later\n\npragma solidity ^0.6.7;\n\nimport \"@openzeppelinV3/contracts/GSN/Context.sol\";\nimport \"@openzeppelinV3/contracts/math/SafeMath.sol\";\nimport \"@openzeppelinV3/contracts/math/SignedSafeMath.sol\";\n\nimport \"../../interfaces/chainlink/AggregatorV3Interface.sol\";\nimport \"../../interfaces/overlay/IOVLFeed.sol\";\nimport \"../../interfaces/overlay/IOVLPosition.sol\";\n\ncontract OVLChainlinkFeed is Context, IOVLFeed {\n  using SafeMath for uint256;\n  using SignedSafeMath for int256;\n\n  AggregatorV3Interface internal _chainlink;\n  address public dataSource;\n  uint256 public rounds; // # of rounds to avg TWAP over (~ 8h)\n\n  constructor(address _data, uint256 _rounds) public {\n    _chainlink = AggregatorV3Interface(_data);\n    dataSource = _data;\n    rounds = _rounds;\n  }\n\n  function _fetch() private view returns (int256, uint256) {\n    // NOTE: 1h data for BTCUSD, 20m data for ETHUSD, 1h data for Fast gas\n    (uint80 roundId, int256 price, , uint256 timestamp, ) = _chainlink.latestRoundData();\n    require(timestamp > 0, \"OVLChainlinkFeed: round not complete\");\n\n    // Get the TWAP over rounds\n    uint256 period = 0;\n    int256 priceCumulative = 0;\n    for (uint256 i=0; i < rounds; i++) {\n      if (roundId == 0) {\n        break;\n      }\n      roundId--;\n      (, int256 prevRoundPrice, , uint256 prevRoundTimestamp, ) = _chainlink.getRoundData(roundId);\n\n      uint256 delt = timestamp.sub(prevRoundTimestamp);\n      priceCumulative = priceCumulative.add(price.mul(int256(delt)));\n      period = period.add(delt);\n\n      timestamp = prevRoundTimestamp;\n      price = prevRoundPrice;\n    }\n\n    if (period != 0) {\n      price = priceCumulative.div(int256(period));\n    }\n    return (price, period);\n  }\n\n  function data() external view returns (int256, uint256) {\n    return _fetch();\n  }\n\n  function fetchData() public virtual override returns (int256, uint256) {\n    return _fetch();\n  }\n}\n",
  "sourceMap": "403:1533:4:-:0;;;659:149;5:9:-1;2:2;;;27:1;24;17:12;2:2;659:149:4;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;659:149:4;;;;;;;716:10;:41;;-1:-1:-1;;;;;716:41:4;;;-1:-1:-1;;;;;;716:41:4;;;;;;;;;763:18;;;;;;;;;787:6;:16;403:1533;;;;;;",
  "sourcePath": "contracts/feeds/OVLChainlinkFeed.sol",
  "type": "contract"
}