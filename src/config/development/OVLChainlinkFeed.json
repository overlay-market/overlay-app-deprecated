{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_data",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "dataSource",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getData",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/mikeyrf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/GSN/Context.sol",
    "16": "contracts/feeds/OVLChainlinkFeed.sol",
    "21": "interfaces/overlay/IOVLFeed.sol"
  },
  "ast": {
    "absolutePath": "contracts/feeds/OVLChainlinkFeed.sol",
    "exportedSymbols": {
      "OVLChainlinkFeed": [
        55
      ]
    },
    "id": 56,
    "license": "AGPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "47:23:16"
      },
      {
        "absolutePath": "/home/mikeyrf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/GSN/Context.sol",
        "file": "@openzeppelinV3/contracts/GSN/Context.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 56,
        "sourceUnit": 1311,
        "src": "72:51:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/mikeyrf/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/math/SignedSafeMath.sol",
        "file": "@openzeppelinV3/contracts/math/SignedSafeMath.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 56,
        "sourceUnit": 1490,
        "src": "124:59:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/chainlink/AggregatorV3Interface.sol",
        "file": "../../interfaces/chainlink/AggregatorV3Interface.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 56,
        "sourceUnit": 1506,
        "src": "185:62:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/overlay/IOVLFeed.sol",
        "file": "../../interfaces/overlay/IOVLFeed.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 56,
        "sourceUnit": 1514,
        "src": "248:47:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/overlay/IOVLPosition.sol",
        "file": "../../interfaces/overlay/IOVLPosition.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 56,
        "sourceUnit": 1580,
        "src": "296:51:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1310,
              "src": "378:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$1310",
                "typeString": "contract Context"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "378:7:16"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9,
              "name": "IOVLFeed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1513,
              "src": "387:8:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IOVLFeed_$1513",
                "typeString": "contract IOVLFeed"
              }
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "387:8:16"
          }
        ],
        "contractDependencies": [
          1310,
          1513
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 55,
        "linearizedBaseContracts": [
          55,
          1513,
          1310
        ],
        "name": "OVLChainlinkFeed",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 12,
            "mutability": "mutable",
            "name": "_chainlink",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 55,
            "src": "400:41:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$1505",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "contractScope": null,
              "id": 11,
              "name": "AggregatorV3Interface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1505,
              "src": "400:21:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$1505",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "1b076edc",
            "id": 14,
            "mutability": "mutable",
            "name": "dataSource",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 55,
            "src": "445:25:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 13,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "445:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 29,
              "nodeType": "Block",
              "src": "509:76:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 19,
                      "name": "_chainlink",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "515:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1505",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 21,
                          "name": "_data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "550:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 20,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1505,
                        "src": "528:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1505_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 22,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "528:28:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1505",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "515:41:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1505",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "515:41:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 25,
                      "name": "dataSource",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "562:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 26,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "575:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "562:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 28,
                  "nodeType": "ExpressionStatement",
                  "src": "562:18:16"
                }
              ]
            },
            "documentation": null,
            "id": 30,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 30,
                  "src": "487:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "486:15:16"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "509:0:16"
            },
            "scope": 55,
            "src": "475:110:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1512
            ],
            "body": {
              "id": 53,
              "nodeType": "Block",
              "src": "654:242:16",
              "statements": [
                {
                  "assignments": [
                    null,
                    37,
                    null,
                    39,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 37,
                      "mutability": "mutable",
                      "name": "price",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 53,
                      "src": "738:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 36,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "738:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null,
                    {
                      "constant": false,
                      "id": 39,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 53,
                      "src": "754:17:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "754:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 43,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 40,
                        "name": "_chainlink",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "777:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1505",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1504,
                      "src": "777:26:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "777:28:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "735:70:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 45,
                          "name": "timestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "819:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "831:1:16",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "819:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f564c436861696e6c696e6b466565643a20726f756e64206e6f7420636f6d706c657465",
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "834:38:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c9714c6632158d5ec264e2b12f388c9c0ca57f14ed2e15fcf61a568731085d8",
                          "typeString": "literal_string \"OVLChainlinkFeed: round not complete\""
                        },
                        "value": "OVLChainlinkFeed: round not complete"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c9714c6632158d5ec264e2b12f388c9c0ca57f14ed2e15fcf61a568731085d8",
                          "typeString": "literal_string \"OVLChainlinkFeed: round not complete\""
                        }
                      ],
                      "id": 44,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "811:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "811:62:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "811:62:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51,
                    "name": "price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37,
                    "src": "886:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 35,
                  "id": 52,
                  "nodeType": "Return",
                  "src": "879:12:16"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3bc5de30",
            "id": 54,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getData",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 32,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "628:8:16"
            },
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "605:2:16"
            },
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 54,
                  "src": "646:6:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "646:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "645:8:16"
            },
            "scope": 55,
            "src": "589:307:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 56,
        "src": "349:549:16"
      }
    ],
    "src": "47:852:16"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161021f38038061021f8339818101604052602081101561003357600080fd5b5051600080546001600160a01b039092166001600160a01b03199283168117909155600180549092161790556101b18061006e6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631b076edc1461003b5780633bc5de301461005f575b600080fd5b610043610079565b604080516001600160a01b039092168252519081900360200190f35b610067610088565b60408051918252519081900360200190f35b6001546001600160a01b031681565b60008060008060009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156100da57600080fd5b505afa1580156100ee573d6000803e3d6000fd5b505050506040513d60a081101561010457600080fd5b5060208101516060909101519092509050806101515760405162461bcd60e51b81526004018080602001828103825260248152602001806101586024913960400191505060405180910390fd5b5090509056fe4f564c436861696e6c696e6b466565643a20726f756e64206e6f7420636f6d706c657465a264697066735822122074ec495efc77491748353be7b8ff29e090d2c4792153934ef7ed06efc317236464736f6c63430006080033",
  "bytecodeSha1": "297c050bcc566a875a55cbb75a302bd68000022a",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.8"
  },
  "contractName": "OVLChainlinkFeed",
  "coverageMap": {
    "branches": {
      "0": {},
      "16": {
        "OVLChainlinkFeed.getData": {
          "2": [
            819,
            832,
            true
          ]
        }
      },
      "21": {}
    },
    "statements": {
      "0": {},
      "16": {
        "OVLChainlinkFeed.getData": {
          "0": [
            811,
            873
          ],
          "1": [
            879,
            891
          ]
        }
      },
      "21": {}
    }
  },
  "dependencies": [
    "Context",
    "IOVLFeed"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100365760003560e01c80631b076edc1461003b5780633bc5de301461005f575b600080fd5b610043610079565b604080516001600160a01b039092168252519081900360200190f35b610067610088565b60408051918252519081900360200190f35b6001546001600160a01b031681565b60008060008060009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156100da57600080fd5b505afa1580156100ee573d6000803e3d6000fd5b505050506040513d60a081101561010457600080fd5b5060208101516060909101519092509050806101515760405162461bcd60e51b81526004018080602001828103825260248152602001806101586024913960400191505060405180910390fd5b5090509056fe4f564c436861696e6c696e6b466565643a20726f756e64206e6f7420636f6d706c657465a264697066735822122074ec495efc77491748353be7b8ff29e090d2c4792153934ef7ed06efc317236464736f6c63430006080033",
  "deployedSourceMap": "349:549:16:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;349:549:16;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;445:25:16;;;:::i;:::-;;;;-1:-1:-1;;;;;445:25:16;;;;;;;;;;;;;;589:307;;;:::i;:::-;;;;;;;;;;;;;;;;445:25;;;-1:-1:-1;;;;;445:25:16;;:::o;589:307::-;646:6;738:12;754:17;777:10;;;;;;;;;-1:-1:-1;;;;;777:10:16;-1:-1:-1;;;;;777:26:16;;:28;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;777:28:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;777:28:16;;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;777:28:16;;;;;;;;;;;-1:-1:-1;777:28:16;-1:-1:-1;819:13:16;811:62;;;;-1:-1:-1;;;811:62:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;886:5:16;-1:-1:-1;589:307:16;:::o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    349,
    898
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1B076EDC EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x3BC5DE30 EQ PUSH2 0x5F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x79 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x67 PUSH2 0x88 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x60 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 POP SWAP1 POP DUP1 PUSH2 0x151 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x158 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP SWAP1 POP SWAP1 JUMP INVALID 0x4F JUMP 0x4C NUMBER PUSH9 0x61696E6C696E6B4665 PUSH6 0x643A20726F75 PUSH15 0x64206E6F7420636F6D706C657465A2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0xEC495EFC77491748353BE7B8FF29E090D2C4792153 SWAP4 0x4E 0xF7 0xED MOD 0xEF 0xC3 OR 0x23 PUSH5 0x64736F6C63 NUMBER STOP MOD ADDMOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        349,
        898
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        349,
        898
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        349,
        898
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5": {
      "fn": null,
      "offset": [
        349,
        898
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        349,
        898
      ],
      "op": "REVERT",
      "path": "16"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        349,
        898
      ],
      "op": "POP",
      "path": "16"
    },
    "18": {
      "fn": null,
      "offset": [
        349,
        898
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        349,
        898
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "21": {
      "fn": null,
      "offset": [
        349,
        898
      ],
      "op": "LT",
      "path": "16"
    },
    "22": {
      "fn": null,
      "offset": [
        349,
        898
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x36"
    },
    "25": {
      "fn": null,
      "offset": [
        349,
        898
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "26": {
      "fn": null,
      "offset": [
        349,
        898
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        349,
        898
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "29": {
      "fn": null,
      "offset": [
        349,
        898
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        349,
        898
      ],
      "op": "SHR",
      "path": "16"
    },
    "32": {
      "fn": null,
      "offset": [
        349,
        898
      ],
      "op": "DUP1",
      "path": "16"
    },
    "33": {
      "fn": null,
      "offset": [
        349,
        898
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1B076EDC"
    },
    "38": {
      "fn": null,
      "offset": [
        349,
        898
      ],
      "op": "EQ",
      "path": "16"
    },
    "39": {
      "fn": null,
      "offset": [
        349,
        898
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3B"
    },
    "42": {
      "fn": null,
      "offset": [
        349,
        898
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "43": {
      "fn": null,
      "offset": [
        349,
        898
      ],
      "op": "DUP1",
      "path": "16"
    },
    "44": {
      "fn": null,
      "offset": [
        349,
        898
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3BC5DE30"
    },
    "49": {
      "fn": null,
      "offset": [
        349,
        898
      ],
      "op": "EQ",
      "path": "16"
    },
    "50": {
      "fn": null,
      "offset": [
        349,
        898
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5F"
    },
    "53": {
      "fn": null,
      "offset": [
        349,
        898
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "54": {
      "fn": null,
      "offset": [
        349,
        898
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "55": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "57": {
      "op": "DUP1"
    },
    "58": {
      "first_revert": true,
      "op": "REVERT"
    },
    "59": {
      "offset": [
        445,
        470
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "60": {
      "fn": null,
      "offset": [
        445,
        470
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x43"
    },
    "63": {
      "fn": null,
      "offset": [
        445,
        470
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x79"
    },
    "66": {
      "fn": null,
      "jump": "i",
      "offset": [
        445,
        470
      ],
      "op": "JUMP",
      "path": "16"
    },
    "67": {
      "fn": null,
      "offset": [
        445,
        470
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "68": {
      "fn": null,
      "offset": [
        445,
        470
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "70": {
      "fn": null,
      "offset": [
        445,
        470
      ],
      "op": "DUP1",
      "path": "16"
    },
    "71": {
      "fn": null,
      "offset": [
        445,
        470
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "72": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "74": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "76": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "78": {
      "op": "SHL"
    },
    "79": {
      "op": "SUB"
    },
    "80": {
      "offset": [
        445,
        470
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "81": {
      "fn": null,
      "offset": [
        445,
        470
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "82": {
      "fn": null,
      "offset": [
        445,
        470
      ],
      "op": "AND",
      "path": "16"
    },
    "83": {
      "fn": null,
      "offset": [
        445,
        470
      ],
      "op": "DUP3",
      "path": "16"
    },
    "84": {
      "fn": null,
      "offset": [
        445,
        470
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "85": {
      "fn": null,
      "offset": [
        445,
        470
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "86": {
      "fn": null,
      "offset": [
        445,
        470
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "87": {
      "fn": null,
      "offset": [
        445,
        470
      ],
      "op": "DUP2",
      "path": "16"
    },
    "88": {
      "fn": null,
      "offset": [
        445,
        470
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "89": {
      "fn": null,
      "offset": [
        445,
        470
      ],
      "op": "SUB",
      "path": "16"
    },
    "90": {
      "fn": null,
      "offset": [
        445,
        470
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "92": {
      "fn": null,
      "offset": [
        445,
        470
      ],
      "op": "ADD",
      "path": "16"
    },
    "93": {
      "fn": null,
      "offset": [
        445,
        470
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "94": {
      "fn": null,
      "offset": [
        445,
        470
      ],
      "op": "RETURN",
      "path": "16"
    },
    "95": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        589,
        896
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "96": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        589,
        896
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x67"
    },
    "99": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        589,
        896
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x88"
    },
    "102": {
      "fn": "OVLChainlinkFeed.getData",
      "jump": "i",
      "offset": [
        589,
        896
      ],
      "op": "JUMP",
      "path": "16"
    },
    "103": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        589,
        896
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "104": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        589,
        896
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "106": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        589,
        896
      ],
      "op": "DUP1",
      "path": "16"
    },
    "107": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        589,
        896
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "108": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        589,
        896
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "109": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        589,
        896
      ],
      "op": "DUP3",
      "path": "16"
    },
    "110": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        589,
        896
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "111": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        589,
        896
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "112": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        589,
        896
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "113": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        589,
        896
      ],
      "op": "DUP2",
      "path": "16"
    },
    "114": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        589,
        896
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "115": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        589,
        896
      ],
      "op": "SUB",
      "path": "16"
    },
    "116": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        589,
        896
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "118": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        589,
        896
      ],
      "op": "ADD",
      "path": "16"
    },
    "119": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        589,
        896
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "120": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        589,
        896
      ],
      "op": "RETURN",
      "path": "16"
    },
    "121": {
      "offset": [
        445,
        470
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "122": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        445,
        470
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "124": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        445,
        470
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "131": {
      "op": "SHL"
    },
    "132": {
      "op": "SUB"
    },
    "133": {
      "offset": [
        445,
        470
      ],
      "op": "AND",
      "path": "16"
    },
    "134": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        445,
        470
      ],
      "op": "DUP2",
      "path": "16"
    },
    "135": {
      "fn": "OVLChainlinkFeed.getData",
      "jump": "o",
      "offset": [
        445,
        470
      ],
      "op": "JUMP",
      "path": "16"
    },
    "136": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        589,
        896
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "137": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        646,
        652
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "139": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        738,
        750
      ],
      "op": "DUP1",
      "path": "16"
    },
    "140": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        754,
        771
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "142": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        787
      ],
      "op": "DUP1",
      "path": "16"
    },
    "143": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        787
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "145": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        787
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "146": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        787
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "147": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        787
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "148": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        787
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "151": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        787
      ],
      "op": "EXP",
      "path": "16"
    },
    "152": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        787
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "153": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        787
      ],
      "op": "DIV",
      "path": "16"
    },
    "154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "158": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "160": {
      "op": "SHL"
    },
    "161": {
      "op": "SUB"
    },
    "162": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        787
      ],
      "op": "AND",
      "path": "16"
    },
    "163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "169": {
      "op": "SHL"
    },
    "170": {
      "op": "SUB"
    },
    "171": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        803
      ],
      "op": "AND",
      "path": "16"
    },
    "172": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        803
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFEAF968C"
    },
    "177": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "179": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "180": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "DUP2",
      "path": "16"
    },
    "181": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "186": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "AND",
      "path": "16"
    },
    "187": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "189": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "SHL",
      "path": "16"
    },
    "190": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "DUP2",
      "path": "16"
    },
    "191": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "192": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "194": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "ADD",
      "path": "16"
    },
    "195": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA0"
    },
    "197": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "199": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "200": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "DUP1",
      "path": "16"
    },
    "201": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "DUP4",
      "path": "16"
    },
    "202": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "SUB",
      "path": "16"
    },
    "203": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "DUP2",
      "path": "16"
    },
    "204": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "DUP7",
      "path": "16"
    },
    "205": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "DUP1",
      "path": "16"
    },
    "206": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "207": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "208": {
      "op": "DUP1"
    },
    "209": {
      "op": "ISZERO"
    },
    "210": {
      "op": "PUSH2",
      "value": "0xDA"
    },
    "213": {
      "op": "JUMPI"
    },
    "214": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "216": {
      "op": "DUP1"
    },
    "217": {
      "op": "REVERT"
    },
    "218": {
      "op": "JUMPDEST"
    },
    "219": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "POP",
      "path": "16"
    },
    "220": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "GAS",
      "path": "16"
    },
    "221": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "222": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "223": {
      "op": "DUP1"
    },
    "224": {
      "op": "ISZERO"
    },
    "225": {
      "op": "PUSH2",
      "value": "0xEE"
    },
    "228": {
      "op": "JUMPI"
    },
    "229": {
      "op": "RETURNDATASIZE"
    },
    "230": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "232": {
      "op": "DUP1"
    },
    "233": {
      "op": "RETURNDATACOPY"
    },
    "234": {
      "op": "RETURNDATASIZE"
    },
    "235": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "237": {
      "op": "REVERT"
    },
    "238": {
      "op": "JUMPDEST"
    },
    "239": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "POP",
      "path": "16"
    },
    "240": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "POP",
      "path": "16"
    },
    "241": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "POP",
      "path": "16"
    },
    "242": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "POP",
      "path": "16"
    },
    "243": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "245": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "246": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "249": {
      "op": "DUP2"
    },
    "250": {
      "op": "LT"
    },
    "251": {
      "op": "ISZERO"
    },
    "252": {
      "op": "PUSH2",
      "value": "0x104"
    },
    "255": {
      "op": "JUMPI"
    },
    "256": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "258": {
      "op": "DUP1"
    },
    "259": {
      "op": "REVERT"
    },
    "260": {
      "op": "JUMPDEST"
    },
    "261": {
      "op": "POP"
    },
    "262": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "264": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "DUP2",
      "path": "16"
    },
    "265": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "ADD",
      "path": "16"
    },
    "266": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "267": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "269": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "270": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "271": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "ADD",
      "path": "16"
    },
    "272": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "273": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "274": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "275": {
      "op": "POP"
    },
    "276": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        777,
        805
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "277": {
      "op": "POP"
    },
    "278": {
      "branch": 2,
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        819,
        832
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 0
    },
    "279": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x151"
    },
    "282": {
      "branch": 2,
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "283": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "285": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "286": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "290": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "292": {
      "op": "SHL"
    },
    "293": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "DUP2",
      "path": "16"
    },
    "294": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "295": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "297": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "ADD",
      "path": "16"
    },
    "298": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "DUP1",
      "path": "16"
    },
    "299": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "DUP1",
      "path": "16"
    },
    "300": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "302": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "ADD",
      "path": "16"
    },
    "303": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "DUP3",
      "path": "16"
    },
    "304": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "DUP2",
      "path": "16"
    },
    "305": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "SUB",
      "path": "16"
    },
    "306": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "DUP3",
      "path": "16"
    },
    "307": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "308": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "310": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "DUP2",
      "path": "16"
    },
    "311": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "312": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "314": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "ADD",
      "path": "16"
    },
    "315": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "DUP1",
      "path": "16"
    },
    "316": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x158"
    },
    "319": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "321": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "322": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "CODECOPY",
      "path": "16"
    },
    "323": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "325": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "ADD",
      "path": "16"
    },
    "326": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "327": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "POP",
      "path": "16"
    },
    "328": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "POP",
      "path": "16"
    },
    "329": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "331": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "332": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "DUP1",
      "path": "16"
    },
    "333": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "334": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "SUB",
      "path": "16"
    },
    "335": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "336": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "REVERT",
      "path": "16"
    },
    "337": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        811,
        873
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "338": {
      "op": "POP"
    },
    "339": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        886,
        891
      ],
      "op": "SWAP1",
      "path": "16",
      "statement": 1
    },
    "340": {
      "op": "POP"
    },
    "341": {
      "fn": "OVLChainlinkFeed.getData",
      "offset": [
        589,
        896
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "342": {
      "fn": "OVLChainlinkFeed.getData",
      "jump": "o",
      "offset": [
        589,
        896
      ],
      "op": "JUMP",
      "path": "16"
    }
  },
  "sha1": "802020705ba6b5ae3057a3d041dde06bee538f48",
  "source": "// SPDX-License-Identifier: AGPL-3.0-or-later\n\npragma solidity ^0.6.7;\n\nimport \"@openzeppelinV3/contracts/GSN/Context.sol\";\nimport \"@openzeppelinV3/contracts/math/SignedSafeMath.sol\";\n\nimport \"../../interfaces/chainlink/AggregatorV3Interface.sol\";\nimport \"../../interfaces/overlay/IOVLFeed.sol\";\nimport \"../../interfaces/overlay/IOVLPosition.sol\";\n\ncontract OVLChainlinkFeed is Context, IOVLFeed {\n  AggregatorV3Interface internal _chainlink;\n  address public dataSource;\n\n  constructor(address _data) public {\n    _chainlink = AggregatorV3Interface(_data);\n    dataSource = _data;\n  }\n\n  function getData() public view virtual override returns (int256) {\n    // NOTE: 1h data for BTCUSD, 20m data for ETHUSD, 1h data for Fast gas\n    (, int256 price, , uint256 timestamp, ) = _chainlink.latestRoundData();\n    require(timestamp > 0, \"OVLChainlinkFeed: round not complete\");\n    return price;\n  }\n}\n",
  "sourceMap": "349:549:16:-:0;;;475:110;5:9:-1;2:2;;;27:1;24;17:12;2:2;475:110:16;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;475:110:16;515:10;:41;;-1:-1:-1;;;;;515:41:16;;;-1:-1:-1;;;;;;515:41:16;;;;;;;;;562:18;;;;;;;;349:549;;;;;;",
  "sourcePath": "contracts/feeds/OVLChainlinkFeed.sol",
  "type": "contract"
}